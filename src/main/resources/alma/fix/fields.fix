#  <!-- 0xx -->
#

# 024 - Other Standard Identifier (R) Subfield: $a (NR) $2 (NR)
# urn

set_array("urn[]")

do list(path: "0247?", "var": "$i")
  if any_equal("$i.2","urn")
      copy_field("$i.a","urn[].$append")
  end
end

replace_all("urn[].*","^(nbn:de:.*\\d)$","urn:$1")

#  <data name="hbzId" source="035  .a">
#    <regexp match="\(DE-605\)(.*)" format="${1}"/>
#  </data>

# 035 - System Control Number (R) - Subfield: $a (NR)

do list(path: "035  ", "var":"$i")
  if any_match("$i.a", "\\(DE-605\\)\\D\\D(.*)")
    copy_field("$i.a", "hbzId")
  end
end

replace_all("hbzId","\\(DE-605\\)(.*)","$1")

#
#  <data name="@language_source_all" source="008">
#    <substring start="35" end="38" />
#  </data>
#  <data name="@language_source_all" source="041[ 01] .[adj]" />
# TODO: Needs to be explained why this is double. Can only one of the elements be used?


# 008 - Fixed-Length Data Elements-General Information (NR) - No subfields

set_array("@language")
copy_field("008", "@008-lang")
substring("@008-lang", "35", "38")
copy_field("008-lang", "@language.$append")
copy_field("041[ 01] .[adj]", "@language.$append")
#  <data name="@language_source" source="@language_source_all">
#    <unique />
#  </data>
uniq("@language")
#  <data name="@language_long" source="@language_source">
#    <lookup in="ISO639-2-to-GND" />
#  </data>
#  <entity name="language[]" flushWith="record">
set_array("language[]")
do list(path:"@language", "var":"$i")
  copy_field("$i", "language[].$append.id")
  copy_field("$i", "language[].$last.label")
end

lookup("language[].*.label","ISO639-2-to-GND")
prepend("language[].*.id", "http://id.loc.gov/vocabulary/iso639-2/")


#    <entity name="" flushWith="@language_source" reset="true">
#      <data name="id" source="@language_source">
#        <regexp match="(.*)" format="http://id.loc.gov/vocabulary/iso639-2/${1}"/>
#      </data>
#      <data name="label" source="@language_long" />
#    </entity>
#  </entity>

# TODO: Is this needed?


#
#  <data source="020  .a" name="@cleanIsbn">
#    <isbn to="clean"/>
#    <unique />
#  </data>

# 020 - International Standard Book Number (R) - $a (NR)
# source data sometimes provides repeated subfield $a even if this is not valid marc

set_array("@isbn[]")
set_array("isbn[]")

do list(path:"020  ", "var": "$i")
  do list(path:"$i.a", "var": "$j")
    copy_field("$j","@isbn[].$append")
  end
end

do list(path:"@isbn[]", "var": "$i")
  isbn("$i", to: "clean")
  copy_field("$i", "isbn[].$append")
  copy_field("$i", "isbn[].$append")
  if any_match("$i", ".{13}")
    isbn("isbn[].$last", to:"isbn10")
  elsif any_match("$i", ".{10}")
    isbn("isbn[].$last", to:"isbn13")
  end
end

uniq("isbn[]")


# TODO: ISBN needs to be done if there is a supporting function in fix.
#  <entity name="isbn[]" flushWith="record">
#    <data name="" source="@cleanIsbn">
#      <isbn to="isbn10"/>
#      <unique />
#    </data>
#    <data name="" source="@cleanIsbn">
#      <isbn to="isbn13"/>
#      <unique />
#    </data>
#  </entity>
#


#  <entity name="issn[]" flushWith="record">
#    <data name="" source="022? .a">
#      <replace pattern="-" with="" />
#    </data>
#  </entity>

# 022 - International Standard Serial Number (R) - Subfield $a (NR)
set_array("issn[]")
do list(path:"022? ", "var":"$i")
  copy_field("$i.a", "issn[].$append")
end
replace_all("issn[].*", "-","")

#
#  <entity name="ismn[]" flushWith="record">
#    <data name="" source="0242?.a">
#      <replace pattern="-" with="" />
#    </data>
#  </entity>

# 024 - Other Standard Identifier (R) - Subfield a (NR) 1. Indicator 2 = ISMN 
set_array("ismn[]")
do list(path:"0242?", "var":"$i")
  copy_field("$i.a", "ismn[].$append")
end
replace_all("ismn[].*", "-","")


#
#  <entity name="doi[]" flushWith="record">
#    <if>
#      <data source="0247?.2">
#        <equals string="doi" />
#      </data>
#    </if>
#    <data name="" source="0247?.a" />
#  </entity>

# TODO: Specify if DOI should be URI?
# 024 (R) Subfield a (NR) 1. Indicator 7 = to defined Identifier 
set_array("doi[]")
do list(path:"0247?", "var":"$i")
  if all_equal("$i.2","doi")
    copy_field("$i.a", "doi[].$append")
  end
end

#
#  <data name="@oclcNumber" source="035  .a">
#    <regexp match="\(OCoLC\)(.*)" format="${1}"/>
#  </data>
#
#  <data name="oclcNumber" source="@oclcNumber" />

# 035 - System Control Number (R) - Subfield: $a (NR)
set_array("oclcNumber[]")

do list(path:"035  ", "var":"$i")
    if all_match("$i.a", "\\(OCoLC\\)(.*)")
      copy_field("$i.a", "oclcNumber[].$append")
    end
end
replace_all("oclcNumber[].*", "\\(OCoLC\\)","")

#
#  <data name="@zdbId" source="035  .a">
#    <regexp match="\(DE-600\)(.*)" format="${1}"/>
#  </data>
#
#  <data name="zdbId" source="@zdbId" />

# 035 - System Control Number (R) - Subfield: $a (NR)
do list(path:"035  ", "var":"$i")
  if all_match("$i.a", "\\(DE-600\\)(.*)")
    copy_field("$i.a", "zdbId")
  end
end
replace_all("zdbId", "\\(DE-600\\)","")

#
#  <entity name="sameAs[]" flushWith="record">
set_array("sameAs[]")


#    <entity name="">
#      <data name="id" source="035  .a">
#        <regexp match="\(DE-605\)(.*)" format="http://hub.culturegraph.org/resource/HBZ-${1}"/>
#      </data>
#      <data name="label" source="035  .a">
#        <regexp match="\(DE-605\)(.*)" format="Culturegraph Ressource"/>
#      </data>
#    </entity>


# 035 - System Control Number (R) - Subfield: $a (NR)
do list(path:"035  ", "var":"$i")
  if all_match("$i.a", "\\(DE-605\\)(.*)")
    copy_field("$i.a", "sameAs[].$append.id")
    replace_all("sameAs[].$last.id", "\\(DE-605\\)(.*)","http://hub.culturegraph.org/resource/HBZ-$1")
    add_field("sameAs[].$last.label","Culturegraph Ressource")
  end
end


#    <entity name="">
#      <data name="id" source="@oclcNumber">
#        <compose prefix="http://worldcat.org/oclc/"/>
#      </data>
#      <data name="label" source="@oclcNumber">
#        <constant value="OCLC Ressource"/>
#      </data>
#    </entity>

do list(path: "oclcNumber[]", "var": "$i")
  paste("sameAs[].$append.id","~http://worldcat.org/oclc/", "$i", join_char:"")
  add_field("sameAs[].$last.label","OCLC Ressource")
end


#    <entity name="">
#      <data name="id" source="@zdbId">
#        <compose prefix="http://ld.zdb-services.de/resource/"/>
#      </data>
#      <data name="label" source="@zdbId">
#        <constant value="ZDB-Ressource"/>
#      </data>
#    </entity>
#  </entity>

do list(path: "zdbId", "var": "$i")
  paste("sameAs[].$append.id","~http://ld.zdb-services.de/resource/", "$i", join_char:"")
  add_field("sameAs[].$last.label","ZDB-Ressource")
end


#
#  <!-- 3xx -->
#
# 300 - Physical Description (R)
# Old Morph MAB-> Extent was less complex: 		<data source="433[-abc][-1].[aq]|653-1.a" name="http://id.loc.gov/ontologies/bibframe/extent"/>
# TODO: Figure out if we need the extent info as complex as the introx info.

#  <data name="@300a1" source="300  .a">
#    <occurrence only="1" />
#    <replace pattern="\s?[:;+\(]?$" with="" />
#  </data>
#  <data name="@300a2" source="300  .a">
#    <occurrence only="2" />
#    <replace pattern="\s?[:;+\)]?$" with="" />
#  </data>
#  <data name="@300b" source="300  .b">
#    <replace pattern="\s?[:;+\(]?$" with="" />
#  </data>
#  <data name="@300c1" source="300  .c">
#    <occurrence only="1" />
#    <replace pattern="\.?\s?[+\(]?$" with="" />
#  </data>
#  <data name="@300c2" source="300  .c">
#    <occurrence only="2" />
#    <replace pattern="\.?\s?[:;+\)]?$" with="" />
#  </data>
#  <data name="@300e" source="300  .e">
#    <replace pattern="\.?\s?\(?$" with="" />
#  </data>
#
#  <combine name="@300a2_punct" value="${a2})">
#    <if>
#      <all>
#        <data source="@300a2" />
#        <none>
#          <data source="@300c2" />
#        </none>
#      </all>
#    </if>
#    <data name="a2" source="@300a2" />
#  </combine>
#  <combine name="@300a2_punct" value="${a2} ; ">
#    <if>
#      <all>
#        <data source="@300a2" />
#        <data source="@300c2" />
#      </all>
#    </if>
#    <data name="a2" source="@300a2" />
#  </combine>
#  <combine name="@300b_punct" value=" : ${b}">
#    <if>
#      <all>
#        <data source="@300b" />
#        <data source="@300a1" />
#      </all>
#    </if>
#    <data name="b" source="@300b" />
#  </combine>
#  <combine name="@300c1_punct" value=" ; ${c1}">
#    <if>
#      <all>
#        <data source="@300c1" />
#        <data source="@300a1|@300b" />
#      </all>
#    </if>
#    <data name="c1" source="@300c1" />
#  </combine>
#  <combine name="@300c2_punct" value="${c2})">
#    <data name="c2" source="@300c2" />
#  </combine>
#  <combine name="@300e_punct" value=" ; ${e}">
#    <if>
#      <all>
#        <data source="300  .e" />
#        <data source="@300[ac]1|@300b" />
#        <none>
#          <data source="@300[ac]2" />
#        </none>
#      </all>
#    </if>
#    <data name="e" source="@300e" />
#  </combine>
#  <combine name="@300e_punct" value=" ; ${e} (">
#    <if>
#      <all>
#        <data source="300  .e" />
#        <data source="@300[ac]1|@300b" />
#        <data source="@300[ac]2" />
#      </all>
#    </if>
#    <data name="e" source="@300e" />
#  </combine>
#
#  <combine name="extent" value="${a1}${b}${c1}${e}${a2}${c2}">
#    <choose name="a1">
#      <data source="@300a1" />
#      <data source="300*">
#        <constant value="" />
#      </data>
#    </choose>
#    <choose name="b">
#      <data source="@300b_punct" />
#      <data source="@300b" />
#      <data source="300*">
#        <constant value="" />
#      </data>
#    </choose>
#    <choose name="c1">
#      <data source="@300c1_punct" />
#      <data source="@300c1" />
#      <data source="300*">
#        <constant value="" />
#      </data>
#    </choose>
#    <choose name="e">
#      <data source="@300e_punct" />
#      <data source="@300e" />
#      <data source="300*">
#        <constant value="" />
#      </data>
#    </choose>
#    <choose name="a2">
#      <data source="@300a2_punct" />
#      <data source="300*">
#        <constant value="" />
#      </data>
#    </choose>
#    <choose name="c2">
#      <data source="@300c2_punct" />
#      <data source="300*">
#        <constant value="" />
#      </data>
#    </choose>
#  </combine>
#

# TODO: This seems to be a relict of Introx.
#  <!--  TODO: this used to be mapped as "publicationHistory". Check how to handle
#
#  <entity name="ChronologyAndEnumeration">
#    <concat name="value" delimiter=" ; ">
#      <data source="3620 .a" />
#    </concat>
#  </entity>
#  -->
#
#  <!-- 4xx -->
#
#  <!-- 5xx -->
#  <entity name="note[]" flushWith="record">
#    <data name="" source="500  .a">
#      <unique />
#    </data>
#  </entity>

# 500 - General Note (R) Subfield: $a (NR)
set_array("note[]")
do list(path:"500  ", "var": "$i")
  copy_field("$i.a", "note[].$append")
end
uniq("note[]")

#
#  <entity name="abstract[]" flushWith="record">
#    <data name="" source="520[ 13] .[ab]" />
#  </entity>

# 520 - Summary, Etc. (R) Subfield: $a (NR), $b (NR)
# TODO: Check if 1. Indicator 1 (REVIEW) is really to count as abstract. Perhaps 2 (Scope and content) is a better fit.
# TODO: Get testdata. 
set_array("abstract[]")
do list(path:"520[ 13] ", "var": "$i")
  copy_field("$i.[ab]", "abstract[].$append")
end


#
#  <entity name="thesisInformation[]" flushWith="record">
#    <data name="" source="502??.a" />
#  </entity>

# 502 - Dissertation Note (R) Subfield: $a (R)
# TODO: Get testdata. 
set_array("thesisInformation[]")
do list(path:"502  ", "var": "$i")
  copy_field("$i.a", "thesisInformation[].$append")
end



#  <!-- 6xx -->


#  <!-- 7xx -->
#  <entity name="isPartOf[]" flushWith="record">
set_array("isPartOf[]")
#    <entity name="" sameEntity="true" reset="true" flushWith="773??|490??">
#      <data source="773??.w|490??.a" name="type">
#        <constant value="IsPartOfRelation" />
#      </data>
#      <entity name="hasSuperordinate[]" sameEntity="true" reset="true">
#        <entity name="" sameEntity="true" reset="true" flushWith="773??|490??">
#          <data name="id" source="773??.w">
#            <regexp match="\(DE-605\)(.*)" format="http://lobid.org/resources/${1}#!"/>
#          </data>
#          <data source="773??.t|490??.a" name="label" />
#        </entity>
#      </entity>
#      <data source="773??.q" name="numbering" />
#    </entity>

# 773 - Host Item Entry (R) Subfield: $w (NR), $t (NR), $q (NR)
# TODO: Shouldnt type always be arrays
do list(path: "773??", "var": "$i")
  set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
  set_array("isPartOf[].$last.hasSuperordinate[]")
  add_field("isPartOf[].$last.hasSuperordinate[].$append.test", "")
  if all_match("$i.w", "\\(DE-605\\)(.*)")
    copy_field("$i.w", "isPartOf[].$last.hasSuperordinate[].$append.id")
    replace_all("isPartOf[].$last.hasSuperordinate[].$last.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
  end
  copy_field("$i.t", "isPartOf[].$last.hasSuperordinate[].$last.label")
  copy_field("$i.q", "isPartOf[].$last.numbering")
end

# 490 - Series Statement (R) - Subfield: $a (R)
# TODO: Shouldnt type always be arrays
# 490 with 1. Indicator 1 has an identical entry in 830. So only 490 with 1. Indicator 0

do list(path: "4900?", "var": "$i")
  set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
  set_array("isPartOf[].$last.hasSuperordinate[]")
  copy_field("$i.a", "isPartOf[].$last.hasSuperordinate[].$append.label")
  copy_field("$i.v", "isPartOf[].$last.numbering")
end

#    <entity name="" sameEntity="true" reset="true" flushWith="830??">
#      <!-- Check for duplicates in local fields. -->
#      <if>
#        <data source="830??.w">
#          <unique/>
#        </data>
#      </if>
#      <data source="830??.w" name="type">
#        <constant value="IsPartOfRelation" />
#      </data>
#      <entity name="hasSuperordinate[]" sameEntity="true" reset="true">
#        <entity name="" sameEntity="true" reset="true" flushWith="830??">
#          <data name="id" source="830??.w">
#            <regexp match="\(DE-605\)(.*)" format="http://lobid.org/resources/${1}#!"/>
#          </data>
#          <data source="830??.a" name="label" />
#        </entity>
#      </entity>
#      <data source="830??.v" name="numbering" />
#    </entity>
#  </entity>

# 830 - Series Added Entry-Uniform Title (R) - Subfield: $w (R), $a (NR), $v (NR)
# Element can be repeatable with local entries they have subfield $M.

do list(path: "830??", "var": "$i")
  unless exists("$i.M")
    set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
    set_array("isPartOf[].$last.hasSuperordinate[]")
    add_field("isPartOf[].$last.hasSuperordinate[].$append.test", "")
    if all_match("$i.w", "\\(DE-605\\)(.*)")
      copy_field("$i.w", "isPartOf[].$last.hasSuperordinate[].$last.id")
      replace_all("isPartOf[].$last.hasSuperordinate[].$last.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
    end
    copy_field("$i.a", "isPartOf[].$last.hasSuperordinate[].$last.label")
    copy_field("$i.v", "isPartOf[].$last.numbering")
  end
end

#
#  <!-- 8xx -->
#  <entity name="tableOfContents[]" flushWith="record">
#    <entity name="" sameEntity="true" reset="true">
#      <if>
#        <all flushWith="8564?" sameEntity="true" reset="true">
#          <data source="8564?.3">
#            <regexp match="^[Ii][Nn][Hh][aA][lL][tT][sS][vV]"/>
#          </data>
#          <data source="8564?.u">
#            <unique />
#          </data>
#        </all>
#      </if>
#      <data name="id" source="8564?.u" />
#      <data name="label" source="8564?.3" />
#    </entity>
#  </entity>

# 856 - Electronic Location and Access (R) - Subfield: $u (R) $3 (NR) 
# 1. Indicator: 4 = HTTP

set_array("tableOfContents[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    if all_match("$i.3", "^[Ii][Nn][Hh][aA][lL][tT][sS][vV].*") # Inhaltsverzeichnis
      copy_field("$i.3", "tableOfContents[].$append.label")
      copy_field("$i.u", "tableOfContents[].$last.id")
    end
  end
end

set_array("description[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    if all_match("$i.3", "^[Ii][Nn][Hh][aA][lL][tT][sS][tT].*") # Inhaltstext
      copy_field("$i.3", "description[].$append.label")
      copy_field("$i.u", "description[].$last.id")
    end
  end
end

set_array("seeAlso[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    if all_match("$i.3", "^[zZ][uU][sS].*") # Zusätzliche Angaben
      copy_field("$i.3", "seeAlso[].$append.label")
      copy_field("$i.u", "seeAlso[].$last.id")
    end
  end
end

# TODO: hasVersion is outcommented since it needs some remodelling 
# See https://github.com/hbz/lobid-resources/issues/1242
#  <!--
#  <entity name="hasVersion[]" flushWith="record">
#    <entity name="" flushWith="856??" sameEntity="true">
#      <if>
#        <any flushWith="856??">
#          <none flushWith="856??" sameEntity="true">
#            <data source="856??.M" />
#          </none>
#          <data source="856??.M">
#            <equals string="$[member]" />
#          </data>
#        </any>
#      </if>
#      <data name="id" source="856??.u">
#        <occurrence only="1" sameEntity="true" />
#        <unique />
#      </data>
#      <data name="label" source="856??.z">
#        <occurrence only="1" sameEntity="true" />
#      </data>
#    </entity>
#  </entity> -->
#



#  <entity name="related[]" flushWith="record">
#    <entity name="" flushWith="775??|776??" sameEntity="true">
#      <if>
#        <any>
#          <data source="775??.z|776??.z">
#            <unique />
#          </data>
#          <data source="775??.w|776??.w">
#            <unique />
#          </data>
#          <data source="775??.t|776??.t">
#            <unique />
#          </data>
#          <data source="775??.x|776??.x">
#            <unique />
#          </data>
#        </any>
#      </if>
#      <data name="id" source="775??.w|776??.w">
#        <regexp match="\(DE-605\)(.*)" format="http://lobid.org/resources/${1}#!"/>
#      </data>
#      <concat name="note" delimiter=" " sameEntity="true" flushWith="775??|776??">
#        <data source="775??.i|776??.i" />
#        <data source="775??.n|776??.n" />
#      </concat>
#      <data name="label" source="775??.t|776??.t" />
#      <entity name="isbn[]" sameEntity="true">
#        <data name="" source="775??.z|776??.z">
#          <isbn to="clean"/>
#          <isbn to="isbn10"/>
#          <unique />
#        </data>
#        <data name="" source="775??.z|776??.z">
#          <isbn to="clean"/>
#          <isbn to="isbn13"/>
#          <unique />
#        </data>
#      </entity>
#      <data name="issn" source="775??.x|776??.x" />
#    </entity>
#  </entity>

# 775 - Other Edition Entry (R) - Subfield: $w (R), $t (NR), $i (R), $n (R), $x(NR), $z (R)
# 776 - Additional Physical Form Entry (R) -  Subfield: $w (R), $t (NR), $i (R), $n (R), $x (NR), $z (R)
# TODO: Needs ISBN function for mapping ISBN in subfield Z! Need test ressource for that.

set_array("related[]")
do list(path:"775??|776??", "var":"$i")
  unless exists("$i.M")
    add_field("related[].$append.test","")
    if all_match("$i.w", "\\(DE-605\\)(.*)")
      copy_field("$i.w", "related[].$last.id")
      replace_all("related[].$last.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
    end
    paste("related[].$last.note","$i.i", "$i.n")
    copy_field("$i.t", "related[].$last.label")
    copy_field("$i.x", "related[].$last.issn")    
    copy_field("$i.z", "$i.ISBN13")
    isbn("$i.isbn13", to: "clean")
    if any_match("$i.isbn13", ".{13}")
      copy_field("$i.isbn13", "$i.isbn10")
      isbn("$i.isbn10", to:"isbn10")
    elsif any_match("$i.isbn13", ".{10}")
      copy_field("$i.isbn13", "$i.isbn10")
      isbn("$i.isbn13", to:"isbn13")
    end
    set_array("related[].$last.isbn[]")
    copy_field("$i.isbn13|isbn10", "related[].$last.isbn[].$append")
  end
end






#
#  <!-- TODO: inCollection: missing edoweb, rpb, publisso, also type-element -->
#  <entity name="inCollection[]" flushWith="record">
set_array("inCollection[]")


#    <!-- ZDB -->
#    <entity name="" sameEntity="true" reset="true">
#      <data name="label" source="@zdbId">
#        <constant value="Zeitschriftendatenbank (ZDB)" />
#      </data>
#      <data name="id" source="@zdbId">
#        <constant value="http://lobid.org/resources/HT014846970#!" />
#      </data>
#      <entity name="type[]" sameEntity="true">
#        <data name="" source="@zdbId">
#          <constant value="Collection"/>
#        </data>
#      </entity>
#    </entity>

if exists("zdbId")
  add_field("inCollection[].$append.id", "http://lobid.org/resources/HT014846970#!")
  add_field("inCollection[].$last.label", "Zeitschriftendatenbank (ZDB)")
end


#    <!-- EZB -->
#    <entity name="" sameEntity="true" reset="true">
#      <data name="label" source="85640.x">
#        <equals string="EZB" />
#        <constant value="Elektronische Zeitschriftenbibliothek (EZB)" />
#      </data>
#      <data name="id" source="85640.x">
#        <equals string="EZB" />
#        <constant value="http://lobid.org/resources/HT016356466#!" />
#      </data>
#      <entity name="type[]" sameEntity="true">
#        <data name="" source="85640.x">
#          <constant value="Collection"/>
#        </data>
#      </entity>
#    </entity>

# 856 - Electronic Location and Access (R) - Subfield: $x - Nonpublic note (R)
# TODO: Check if src/test/resources/alma-fix/(CKB)5280000000199164.xml is also an EZB titel even when it has no 865.
do list(path:"85640", "var":"$i")
  if any_equal("$i.x","EZB") # can test x and x.*
    add_field("inCollection[].$append.id", "http://lobid.org/resources/HT016356466#!")
    add_field("inCollection[].$last.label", "Elektronische Zeitschriftenbibliothek (EZB)")
  end
end



#    <!-- nwbib -->
#    <entity name="" sameEntity="true" reset="true">
#      <data name="label" source="084  .2">
#        <equals string="nwbib" />
#        <constant value="Nordrhein-Westfälische Bibliographie (NWBib)" />
#        <unique />
#      </data>
#      <data name="id" source="084  .2">
#        <equals string="nwbib" />
#        <constant value="http://lobid.org/resources/HT014176012#!" />
#      </data>
#      <entity name="type[]" sameEntity="true">
#        <data name="" source="084  .2">
#          <constant value="Collection"/>
#        </data>
#      </entity>
#    </entity>

# 084 - Other Classification Number (R), Subfield: $2 (NR)

do list(path:"084  ", "var":"$i")
  if any_equal("$i.2","nwbib")
    unless any_equal("inCollection[].*.id","http://lobid.org/resources/HT014176012#!")
      add_field("inCollection[].$append.id", "http://lobid.org/resources/HT014176012#!")
      add_field("inCollection[].$last.label", "Nordrhein-Westfälische Bibliographie (NWBib)")
    end
  end
end



#    <!-- eResource package -->
#    <entity name="" sameEntity="true" reset="true">
#      <data source="912  .a" name="id">
#        <regexp match="(ZDB-[0-9]{1,6}-[a-zA-Z|0-9\\-]*).*" format="http://lobid.org/organisations/${1}#!"/>
#      </data>
#      <data source="912  .a" name="label">
#        <regexp match="(ZDB-[0-9]{1,6}-[a-zA-Z|0-9\\-]*).*" format="eResource package" />
#      </data>
#      <entity name="type[]" sameEntity="true" reset="true">
#        <data name="" source="912  .a">
#          <constant value="Collection"/>
#        </data>
#      </entity>
#    </entity>

# 912 ## "(nur Präfix ZDB-, und "vd18")" no Information about repeatability

do list(path:"912  ", "var":"$i")
  if any_match("$i.a", "(ZDB-[0-9]{1,6}-[a-zA-Z|0-9\\-]*).*")
    copy_field("$i.a", "inCollection[].$append.id")
    replace_all("inCollection[].$last.id", "(ZDB-[0-9]{1,6}-[a-zA-Z|0-9\\-]*).*", "http://lobid.org/organisations/$1#!")
    add_field("inCollection[].$last.label", "eResource package")
  end
end


#    <!-- E-Book and digital copy selections (inofficial) -->
#    <entity name="" sameEntity="true" reset="true">
#      <data source="962  .e" name="id">
#        <regexp match="^[^Z][^D][^B].*" />
#        <regexp match="(.*)" format="https://lobid.org/collections#${1}"/>
#      </data>
#      <entity name="type[]" sameEntity="true" reset="true">
#        <data name="" source="962  .e">
#          <constant value="Collection"/>
#        </data>
#      </entity>
#    </entity>

# 912 ## no Information about repeatability

do list(path:"962  ", "var":"$i")
  do list(path:"$i.e", "var": "$j")
    unless any_match("$j", "^ZDB.*")
      copy_field("$j", "inCollection[].$append.id")
      replace_all("inCollection[].$last.id", "^(.*)$", "http://lobid.org/collections/$1#!")
      # TODO: Do we need a label?
    end
  end
end

#    <!-- 960 selections (inofficial) -->
#    <entity name="" sameEntity="true" reset="true">
#      <data source="9601 .?" name="id">
#        <regexp match="(.*)" format="https://lobid.org/collections#${1}"/>
#      </data>
#      <entity name="type[]" sameEntity="true" reset="true">
#        <data name="" source="9601 .?">
#          <constant value="Collection"/>
#        </data>
#      </entity>
#    </entity>
#  </entity>
#</rules>
#

# 960 ## no Information about repeatability
# TODO: This needs further inspection if we need a collection fr all subfields: https://service-wiki.hbz-nrw.de/display/VDBE/960+-+Selektionskennzeichen+NZ
# Values from r can be invalid.

# do list(path:"960??", "var":"$i")
#   do list(path:"$i.?", "var": "$j")
#       copy_field("$j", "inCollection[].$append.id")
#       replace_all("inCollection[].$last.id", "^(.*)$", "http://lobid.org/collections/$1#!")
#       # TODO: Do we need a label? https://github.com/hbz/lobid-resources/issues/1305#issuecomment-912312471, also labels seem wrong.
#   end
# end


set_array("inCollection[].*.type[]","Collection")
