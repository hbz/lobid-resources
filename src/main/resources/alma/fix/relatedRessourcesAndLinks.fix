set_array("sameAs[]")


# 035 - System Control Number (R) - Subfield: $a (NR)
do list(path:"035  ", "var":"$i")
  if all_match("$i.a", "^\\(DE-605\\)(.*)$")
    copy_field("$i.a", "sameAs[].$append.id")
    replace_all("sameAs[].$last.id", "^\\(DE-605\\)(.*)$","http://hub.culturegraph.org/resource/HBZ-$1")
    add_field("sameAs[].$last.label","Culturegraph Ressource")
  end
end

# oclc

do list(path: "oclcNumber[]", "var": "$i")
  paste("sameAs[].$append.id","~http://worldcat.org/oclc/", "$i", join_char:"")
  add_field("sameAs[].$last.label","OCLC Ressource")
end

# zdb

do list(path: "zdbId", "var": "$i")
  paste("sameAs[].$append.id","~http://ld.zdb-services.de/resource/", "$i", join_char:"")
  add_field("sameAs[].$last.label","ZDB-Ressource")
end

# rpb TODO: Add this if RPB is productive with the correct URL.
# do list(path: "rpbId", "var": "$i")
#   paste("sameAs[].$append.id","~http://rpb.lobid.org/RPB-", "$i", "~#!",join_char:"")
#   add_field("sameAs[].$last.label","RPB-Ressource")
# end

# nwbib, see below inCollection nwbib


# 770 - Supplement/Special Issue Entry (R) - Subflied: $i (R), $t (NR), $w (R)

set_array("supplement[]")

do list(path:"77008", "var":"$i")
  if any_match("$i.i", "Beil.*|Supp.*")
    add_field("supplement[].$append.test","")
    set_array("supplement[].$last.note[]")
    do list(path:"$i.i","var":"$j")
      copy_field("$j","supplement[].$last.note[].$append")
    end
    copy_field("$i.t","supplement[].$last.label")
    do list(path:"$i.w","var": "$j")
      if all_match("$j","^\\((?:DE-600|DE-605)\\)(.*)$")
        copy_field("$j","supplement[].$last.id")
      end
    end
  end
end

replace_all("supplement[].*.id","^\\(DE-605\\)(.*)$","http://lobid.org/resources/$1#!")
replace_all("supplement[].*.id","^\\(DE-600\\)(.*)$","http://lobid.org/resources/ZDB-$1#!")

# isPartOf
# it describes the relation between a published ressource and its superordinate series or collection.
# in contrast to containedIn it is a standalone publication

set_array("isPartOf[]")

# 773 - Host Item Entry (R) Subfield: $w (NR), $t (NR), $q (NR)

unless any_match("leader", "^.{7}[ad].*")
  do list(path: "773??", "var": "$i")
    unless any_equal("$i.9","LOCAL")
      do list(path: "$i.w", "var": "$j")
        set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
        set_array("isPartOf[].$last.hasSuperordinate[]")
        add_field("isPartOf[].$last.hasSuperordinate[].$append.test", "")
        if all_match("$j", "^\\((?:DE-600|DE-605)\\)(.*)$")
          copy_field("$j", "isPartOf[].$last.hasSuperordinate[].$last.id")
        end
        copy_field("$i.t", "isPartOf[].$last.hasSuperordinate[].$last.label")
        copy_field("$i.q", "isPartOf[].$last.numbering")
        set_array("isPartOf[].$last.note[]")
        do list(path:"$i.i","var":"$j")
          copy_field("$j","isPartOf[].$last.note[].$append")
        end
      end
    end
  end
end

# 490 - Series Statement (R) - Subfield: $a (R)
# 490 with 1. Indicator 1 has an identical entry in 830. So only 490 with 1. Indicator 0

do list(path: "4900?", "var": "$i")
  set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
  set_array("isPartOf[].$last.hasSuperordinate[]")
  add_field("isPartOf[].$last.hasSuperordinate[].$append.test", "")
  set_array("isPartOf[].$last.hasSuperordinate[].$last.label")
  do list(path:"$i.a", "var":"$j")
    copy_field("$j", "isPartOf[].$last.hasSuperordinate[].$last.label.$append")
  end
  join_field("isPartOf[].$last.hasSuperordinate[].$last.label", " / ")
  set_array("isPartOf[].$last.numbering")
  do list(path:"$i.v", "var":"$j")
    copy_field("$j", "isPartOf[].$last.numbering", " ")
  end
  join_field("isPartOf[].$last.numbering")
end


# 830 - Series Added Entry-Uniform Title (R) - Subfield: $w (R), $a (NR), $v (NR)
# Element can be repeatable with local entries they have subfield $M.

do list(path: "830??", "var": "$i")
  unless exists("$i.M")
    set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
    set_array("isPartOf[].$last.hasSuperordinate[]")
    add_field("isPartOf[].$last.hasSuperordinate[].$append.test", "")
    if all_match("$i.w", "^\\((?:DE-600|DE-605)\\)(.*)$")
      copy_field("$i.w", "isPartOf[].$last.hasSuperordinate[].$last.id")
    end
    set_array("isPartOf[].$last.hasSuperordinate[].$last.label")
    do list(path:"$i.a", "var":"$j")
      copy_field("$j", "isPartOf[].$last.hasSuperordinate[].$last.label.$append")
    end
    join_field("isPartOf[].$last.hasSuperordinate[].$last.label", " / ")
    copy_field("$i.v", "isPartOf[].$last.numbering")
  end
end

replace_all("isPartOf[].*.hasSuperordinate[].*.label","<<|>>","")



# containedIn
# containedIn only states ressources that are not published by them self but as part of a host ressource.

set_array("containedIn[]")

# 773 - Host Item Entry (R)  - $w  (R)

if any_match("leader", "^.{7}[ad].*")
  if exists("@titleOfSubSeries")
    do list(path: "773??", "var": "$i")
      unless any_equal("$i.9","LOCAL")
        do list(path: "$i.w", "var": "$j")
          set_array("isPartOf[].$append.type[]", "IsPartOfRelation")
          set_array("isPartOf[].$last.hasSuperordinate[]")
          add_field("isPartOf[].$last.hasSuperordinate[].$append.test", "")
          if all_match("$j", "^\\((?:DE-600|DE-605)\\)(.*)$")
            copy_field("$j", "isPartOf[].$last.hasSuperordinate[].$last.id")
          end
          copy_field("$i.t", "isPartOf[].$last.hasSuperordinate[].$last.label")
          copy_field("$i.q", "isPartOf[].$last.numbering")
          set_array("isPartOf[].$last.note[]")
          do list(path:"$i.i","var":"$j")
            copy_field("$j","isPartOf[].$last.note[].$append")
          end
        end
      end
    end
  else # exclude subseries and subvolumes
    do list(path:"773??", "var":"$i")
      do list(path:"$i.w", "var":"$j")
        if any_match("$j","^\\(DE-(600|605)\\).*")
          add_field("containedIn[].$append.test","")
          copy_field("$j","containedIn[].$last.id")
          copy_field("$i.t","containedIn[].$last.label")
        end
      end
    end
  end
end

replace_all("isPartOf[].*.hasSuperordinate[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("isPartOf[].*.hasSuperordinate[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")

replace_all("isPartOf[].*.numbering", "^[©]|\\s?[,.:;/=]?$", "")
uniq("isPartOf[]")
replace_all("containedIn[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("containedIn[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")
replace_all("containedIn[].*.label","<<|>>","")

# primaryForm

# 776 - Additional Physical Form Entry (R) - $i (R), $w (R)

# TODO: is this not duplicate info with "related"?

set_array("primaryForm[]")

do list(path: "77608", "var":"$i")
  if any_match ("$i.i", ".*eproduktion von.*")
    add_field("primaryForm[].$append.test","")
    if all_match("$i.w", "^\\((?:DE-600|DE-605)\\)(.*)$")
      copy_field("$i.w", "primaryForm[].$last.id")
    end
    paste("primaryForm[].$last.label", "$i.i", "$i.w")
    replace_all("primaryForm[].$last.label", "\\((?:DE-600|DE-605)\\)", "")
    set_array("primaryForm[].$last.note[]")
    do list(path:"$i.i","var":"$j")
      copy_field("$j","primaryForm[].$last.note[].$append")
    end
  end
end

replace_all("primaryForm[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("primaryForm[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")

# secondaryForm

set_array("secondaryForm[]")

do list(path: "77608", "var":"$i")
  if any_match ("$i.i", ".*eproduktion")
    add_field("secondaryForm[].$append.test","")
    if all_match("$i.w", "^\\((?:DE-600|DE-605)\\)(.*)$")
      copy_field("$i.w", "secondaryForm[].$last.id")
    end
    copy_field("$i.i", "secondaryForm[].$last.label")
  end
end

replace_all("secondaryForm[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("secondaryForm[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")

# 856 - Electronic Location and Access (R) - Subfield: $u (R) $3 (NR)
# 1. Indicator: 4 = HTTP

set_array("tableOfContents[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    if all_match("$i.3", "^[Ii][Nn][Hh][aA][lL][tT][sS][vV].*") # Inhaltsverzeichnis
      copy_field("$i.3", "tableOfContents[].$append.label")
      copy_field("$i.u", "tableOfContents[].$last.id")
    end
  end
end

set_array("description[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    if all_match("$i.3", "^[Ii][Nn][Hh][aA][lL][tT][sS][tT].*") # Inhaltstext
      copy_field("$i.3", "description[].$append.label")
      copy_field("$i.u", "description[].$last.id")
    end
  end
end

set_array("seeAlso[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    if all_match("$i.3", "^[zZ][uU][sS].*") # Zusätzliche Angaben
      copy_field("$i.3", "seeAlso[].$append.label")
      copy_field("$i.u", "seeAlso[].$last.id")
    end
  end
end

set_array("fulltextOnline[]")

do list(path: "8564?", "var":"$i")
  unless exists("$i.M")
    unless any_match("$i.u",".*(doi.org|nbn-resolving).*")
      if all_equal("$i.z", "kostenfrei") # kostenfrei, added Digitalisierung not only Verlag or Agentur as filter
        if all_match("$i.x", "Verlag|Agentur|Digitalisierung")
          copy_field("$i.x", "fulltextOnline[].$append.label")
          copy_field("$i.u", "fulltextOnline[].$last.id")
        end
      end
      if all_match("$i.x", ".*(Archivierte Online|EZB|Online-Ausg|Resolving-System|Volltext).*")
        copy_field("$i.x", "fulltextOnline[].$append.label")
        copy_field("$i.u", "fulltextOnline[].$last.id")
      end
      if all_match("$i.3", "^[vV][oO][lL].*") # Volltext
        copy_field("$i.3", "fulltextOnline[].$append.label")
        copy_field("$i.u", "fulltextOnline[].$last.id")
      end
    end
  end
end

# doi for fullTextOnline and sameAs

do list(path:"doi[]","var":"$i")
  copy_field("$i", "fulltextOnline[].$append.id")
  prepend("fulltextOnline[].$last.id","https://doi.org/")
  copy_field("fulltextOnline[].$last.id", "sameAs[].$append.id")
  add_field("fulltextOnline[].$last.label", "DOI-Link")
end

# urn for fullTextOnline and sameAs

do list(path:"urn[]","var":"$i")
  copy_field("$i", "fulltextOnline[].$append.id")
  prepend("fulltextOnline[].$last.id","https://nbn-resolving.de/")
  copy_field("fulltextOnline[].$last.id", "sameAs[].$append.id")
  add_field("fulltextOnline[].$last.label", "URN-Link")
end

# TODO: hasVersion is outcommented since it needs some remodelling
# See https://github.com/hbz/lobid-resources/issues/1242
#  <!--
#  <entity name="hasVersion[]" flushWith="record">
#    <entity name="" flushWith="856??" sameEntity="true">
#      <if>
#        <any flushWith="856??">
#          <none flushWith="856??" sameEntity="true">
#            <data source="856??.M" />
#          </none>
#          <data source="856??.M">
#            <equals string="$[member]" />
#          </data>
#        </any>
#      </if>
#      <data name="id" source="856??.u">
#        <occurrence only="1" sameEntity="true" />
#        <unique />
#      </data>
#      <data name="label" source="856??.z">
#        <occurrence only="1" sameEntity="true" />
#      </data>
#    </entity>
#  </entity> -->
#


# 775 - Other Edition Entry (R) - Subfield: $w (R), $t (NR), $i (R), $n (R), $x(NR), $z (R)
# 776 - Additional Physical Form Entry (R) -  Subfield: $w (R), $t (NR), $i (R), $n (R), $x (NR), $z (R)

set_array("related[]")
do list(path:"775??|776??", "var":"$i")
  unless exists("$i.M")
    unless any_match ("$i.i", ".*eproduktion von.*|.*eproduktion")
      add_field("related[].$append.test","")
      if all_match("$i.w", "^\\((?:DE-600|DE-605)\\)(.*)$")
        copy_field("$i.w", "related[].$last.id")
      end
      set_array("related[].$last.note[]")
      paste("related[].$last.note[].$append","$i.i", "$i.n")
      replace_all("related[].$last.note[].$last", "Erscheint auch als ","")
      copy_field("$i.t", "related[].$last.label")
      copy_field("$i.x", "related[].$last.issn")
      set_array("$i.isbn13")
      set_array("$i.isbn10")
      do list(path: "$i.z", "var":"$j")
        isbn("$j", to: "clean")
        copy_field("$j", "$i.isbn13.$append")
        copy_field("$j", "$i.isbn10.$append")
      end
      set_array("related[].$last.isbn[]")
      isbn("$i.isbn10.*", to:"isbn10")
      isbn("$i.isbn13.*", to:"isbn13")
      copy_field("$i.isbn13.*", "related[].$last.isbn[].$append")
      copy_field("$i.isbn10.*", "related[].$last.isbn[].$append")
      end
  end
end

do list(path:"related[]", "var":"$i")
  uniq("$i.isbn[]")
end

replace_all("related[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("related[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")


set_array("inCollection[]")

# hbz NZ

if any_equal("MBD  .M", "49HBZ_NETWORK")
  if any_match("POR  .A", ".*")
    add_field("@inNZ", "true")
  else
    unless any_match("035  .a", "^\\(EXLCZ\\).*")
      add_field("@inNZ", "true")
    end
  end
end

if exists("@inNZ")
  add_field("inCollection[].$append.id", "http://lobid.org/organisations/DE-655#!")
  add_field("inCollection[].$last.label", "hbz - Hochschulbibliothekszentrum des Landes Nordrhein-Westfalen, Netzwerkzone")
end

# zdb

if exists("zdbId")
  add_field("inCollection[].$append.id", "http://lobid.org/resources/HT014846970#!")
  add_field("inCollection[].$last.label", "Zeitschriftendatenbank (ZDB)")
end

# rpb
# Checks rpb subjects are provided.

do list(path:"084??", "var":"$i")
  do once("rpb")
    if any_equal("$i.2","rpb")
      add_field("inCollection[].$append.id", "http://lobid.org/resources/HT013494180#!")
      add_field("inCollection[].$last.label", "Rheinland-Pfälzische Bibliographie")
    end
  end
end

# ezb

# 856 - Electronic Location and Access (R) - Subfield: $x - Nonpublic note (R)
# TODO: Check if src/test/resources/alma-fix/(CKB)5280000000199164.xml is also an EZB titel even when it has no 865.
do list(path:"8564?", "var":"$i")
  if any_equal("$i.x","EZB") # can test x and x.*
    add_field("inCollection[].$append.id", "http://lobid.org/resources/HT016356466#!")
    add_field("inCollection[].$last.label", "Elektronische Zeitschriftenbibliothek (EZB)")
  elsif any_match("$i.u","http://www.bibliothek.uni-regensburg.de/ezeit.*")
    add_field("inCollection[].$append.id", "http://lobid.org/resources/HT016356466#!")
    add_field("inCollection[].$last.label", "Elektronische Zeitschriftenbibliothek (EZB)")    
  end
end


# edoweb

do list(path:"8564?", "var":"$i")
  if any_match("$i.u","^.*edoweb.*") # can test x and x.*
    add_field("inCollection[].$append.id", "http://lobid.org/resources/HT016925914#!")
    add_field("inCollection[].$last.label", "Edoweb Rheinland-Pfalz")
  end
end

# publisso


# TODO: AlephMorph checked for ellinet in "078r1.a" but publisso is also stated in the Link URI is that enough?
do list(path:"8564?", "var":"$i")
  if any_match("$i.u","^.*publisso.*") # can test x and x.*
    add_field("inCollection[].$append.id", "http://repository.publisso.de")
    add_field("inCollection[].$last.label", "Fachrepositorium Lebenswissenschaften")
  end
end

# nwbib

# 084 - Other Classification Number (R), Subfield: $2 (NR)

if any_equal("inCollection[].*.id", "http://lobid.org/organisations/DE-655#!") # only assign hbz NZ records and filter out CZ oder IZ records
  do list(path:"084  ", "var":"$i")
    if any_equal("$i.2","nwbib")
      unless any_equal("inCollection[].*.id","http://lobid.org/resources/HT014176012#!")
        add_field("inCollection[].$append.id", "http://lobid.org/resources/HT014176012#!")
        add_field("inCollection[].$last.label", "Nordrhein-Westfälische Bibliographie (NWBib)")
      end
    end
  end

  do list(path:"960??", "var":"$i")
    if any_contain("$i.n","NWBib")
      unless any_equal("inCollection[].*.id","http://lobid.org/resources/HT014176012#!")
        add_field("inCollection[].$append.id", "http://lobid.org/resources/HT014176012#!")
        add_field("inCollection[].$last.label", "Nordrhein-Westfälische Bibliographie (NWBib)")
      end
    end
  end

  if any_equal("inCollection[].*.id", "http://lobid.org/resources/HT014176012#!")
    paste("sameAs[].$append.id","~http://nwbib.de/", "almaMmsId", "~#!",join_char:"")
    add_field("sameAs[].$last.label","NWBib-Ressource")
  end
end

#rpb

# 084 - Other Classification Number (R), Subfield: $2 (NR)
do list(path:"084  ", "var":"$i")
  if exists("rpbId")
      add_field("inCollection[].$append.id", "http://lobid.org/resources/HT013494180#!")
      add_field("inCollection[].$last.label", "Rheinland-Pfälzische Bibliographie (RPB)")
  end
end


#    eResource package

# 912 ## "(nur Präfix ZDB-, und "vd18")" no Information about repeatability

do list(path:"912  ", "var":"$i")
  if any_match("$i.a", "(ZDB-[0-9]{1,6}-[a-zA-Z|0-9\\-]*).*")
    copy_field("$i.a", "inCollection[].$append.id")
    replace_all("inCollection[].$last.id", "(ZDB-[0-9]{1,6}-[a-zA-Z|0-9\\-]*).*", "http://lobid.org/organisations/$1#!")
    copy_field("inCollection[].$last.id","$i.@label")
    lookup("$i.@label","lobidOrgLabels",delete:"true")
    move_field("$i.@label","inCollection[].$last.label")
  end
end


#  E-Book and digital copy selections (inofficial)

# 912 ## no Information about repeatability

do list(path:"962  ", "var":"$i")
  do list(path:"$i.e", "var": "$j")
    unless any_match("$j", "^ZDB.*")
      copy_field("$j", "inCollection[].$append.id")
      replace_all("inCollection[].$last.id", "^(.*)$", "https://lobid.org/collections#$1")
      # TODO: Do we need a label?
    end
  end
end


# 960 ## no Information about repeatability
# TODO: This needs further inspection if we need a collection fr all subfields: https://service-wiki.hbz-nrw.de/display/VDBE/960+-+Selektionskennzeichen+NZ
# Values from r can be invalid.

# do list(path:"960??", "var":"$i")
#   do list(path:"$i.?", "var": "$j")
#       copy_field("$j", "inCollection[].$append.id")
#       replace_all("inCollection[].$last.id", "^(.*)$", "https://lobid.org/collections#$1")
#       # TODO: Do we need a label? https://github.com/hbz/lobid-resources/issues/1305#issuecomment-912312471, also labels seem wrong.
#   end
# end


set_array("inCollection[].*.type[]","Collection")


# predecessor

# 780 - Preceding Entry (R) - Subfield: $t (NR), $w (R)

set_array("predecessor[]")

do list(path:"780??", "var":"$i")
  add_field("predecessor[].$append.test","")
  copy_field("$i.t", "predecessor[].$last.label")
  do list(path:"$i.w", "var":"$j")
    if all_match("$j", "^\\((?:DE-600|DE-605)\\)(.*)$")
      copy_field("$j", "predecessor[].$last.id")
    end
  end
  replace_all("predecessor[].$last.label", "\\((?:DE-600|DE-605)\\)", "")
  set_array("predecessor[].$last.note[]")
  do list(path:"$i.i","var":"$j")
    copy_field("$j","predecessor[].$last.note[].$append")
  end
end

replace_all("predecessor[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("predecessor[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")


replace_all("predecessor[].*.label","Vorg. ---> ","")

# successor

# 785 - Succeeding Entry (R) - Subfield: $t (NR), $w (R)

set_array("successor[]")

do list(path:"785??", "var":"$i")
  add_field("successor[].$append.test","")
  copy_field("$i.t", "successor[].$last.label")
  do list(path:"$i.w", "var":"$j")
    if all_match("$j", "^\\((?:DE-600|DE-605)\\)(.*)$")
      copy_field("$j", "successor[].$last.id")
    end
  end
  set_array("successor[].$last.note[]")
  do list(path:"$i.i","var":"$j")
    copy_field("$j","successor[].$last.note[].$append")
  end
end

replace_all("successor[].*.id", "^\\(DE-605\\)(.*)$", "http://lobid.org/resources/$1#!")
replace_all("successor[].*.id", "^\\(DE-600\\)(.*)$", "http://lobid.org/resources/ZDB-$1#!")


# 130 - Main Entry-Uniform Title (NR)

set_array("exampleOfWork.label")
copy_field("1300 .a", "exampleOfWork.label.$append")
copy_field("1300 .g", "exampleOfWork.label.$append")
do list(path: "1300 .0", "var":"$i")
  if any_match("$i", "^\\(DE-588\\).*")
    copy_field("$i", "exampleOfWork.id")
    replace_all("exampleOfWork.id","^\\(DE-588\\)(.*$)","https://d-nb.info/gnd/$1")
  end
end

copy_field("24010.a", "exampleOfWork.label.$append")
copy_field("24010.g", "exampleOfWork.label.$append")
do list(path: "24010.0", "var":"$i")
  if any_match("$i", "^\\(DE-588\\).*")
    copy_field("$i", "exampleOfWork.id")
    replace_all("exampleOfWork.id","^\\(DE-588\\)(.*$)","https://d-nb.info/gnd/$1")
  end
end
join_field("exampleOfWork.label", " ")

unless any_equal("exampleOfWork.label", "")
  set_array("exampleOfWork.type[]","Work")
end

replace_all("exampleOfWork.label","<<|>>","")

# following only with second indicator 2 for analytical entries:
# 700 - Added Entry-Personal Name (R)
# 710 - Added Entry-Corporate Name (R)
# 711 - Added Entry-Meeting Name (R)
# 730 - Added Entry-Uniform Title (R)

set_array("containsExampleOfWork[]")
do list(path:"700?2|710?2|711?2|730?2", "var": "$i")
  unless exists("$i.M")
    set_array("containsExampleOfWork[].$append.label")
    set_array("containsExampleOfWork[].$last.creatorOfWork")
    copy_field("$i.a","containsExampleOfWork[].$last.creatorOfWork.$append")
    copy_field("$i.d","containsExampleOfWork[].$last.creatorOfWork.$append")
    copy_field("$i.t","containsExampleOfWork[].$last.label.$append")
    copy_field("$i.p","containsExampleOfWork[].$last.label.$append")
    copy_field("$i.n","containsExampleOfWork[].$last.label.$append")
    copy_field("$i.r","containsExampleOfWork[].$last.label.$append")
    join_field("containsExampleOfWork[].$last.label", ". ")
    join_field("containsExampleOfWork[].$last.creatorOfWork", " ")
    copy_field("$i.n","containsExampleOfWork[].$last.workNumbering")
    copy_field("$i.r","containsExampleOfWork[].$last.musicalKey")
    set_array("containsExampleOfWork[].$last.type[]","Work")
    set_array("containsExampleOfWork[].$last.instrumentation[]")
    do list(path:"$i.m","var":"$j")
      copy_field("$j","containsExampleOfWork[].$last.instrumentation[].$append")
    end
    do list(path: "$i.0", "var":"$k")
      if any_match("$k", "^\\(DE-588\\).*")
        copy_field("$k", "containsExampleOfWork[].$last.id")
        replace_all("containsExampleOfWork[].$last.id","^\\(DE-588\\)(.*$)","https://d-nb.info/gnd/$1")
      end
    end
  end
end

replace_all("containsExampleOfWork[].*.label","<<|>>","")
uniq("inCollection[]")
