# 245 - Title Statement (NR) - Subfield: $a (NR), $b (NR), $n (R), $p (R)

copy_field("245??.a","@title")
unless any_match("@title",".*\\.\\.\\.")
  replace_all("@title", "^[Â©]|\\s?[,.:;/=]?$", "")
end
replace_all("@title","<<|>>","")


set_array("@titleOfSubSeries_n") # Subvolume numbering
do list(path:"245??.n", "var":"$i")
  unless all_equal("$i","[...]")
    copy_field("$i","@titleOfSubSeries_n.$append")
  end
end
join_field("@titleOfSubSeries_n", ". ")

set_array("@titleOfSubSeries_p")

do list(path:"245??.p", "var":"$i") # Subvolume title
  unless all_equal("$i","[...]")
    copy_field("$i","@titleOfSubSeries_p.$append")
  end
end
replace_all("@titleOfSubSeries_p.*", "\\s?\\.?\\s?$", "")
replace_all("@titleOfSubSeries_p.*","<<|>>","")
join_field("@titleOfSubSeries_p", ". ")
if is_empty("@titleOfSubSeries_p")
  remove_field("@titleOfSubSeries_p")
end
if is_empty("@titleOfSubSeries_n")
  remove_field("@titleOfSubSeries_n")
end
if exists("@titleOfSubSeries_n") # separate subvolume numbering and title with :
  prepend("@titleOfSubSeries_p", ": ")
end

paste("@titleOfSubSeries", "@titleOfSubSeries_n",  "@titleOfSubSeries_p", join_char: "")

if is_empty("@titleOfSubSeries")
  remove_field("@titleOfSubSeries")
end

prepend("@titleOfSubSeries",", ")

paste("title","@title", "@titleOfSubSeries", join_char: "") # title consists of main title + if exists: subvolume numbering and subvolume title


# alternateGraphicRepresentation for title, otherTitleInformation, alternativetitle, edition and note

do list(path:"245??","var":"$i")
  if exists("$i.6")
    copy_field("$i.6","$i.linkageTest")
    do list(path:"880??","var":"$880")
      if in ("$i.linkageTest","$880.linkageTest")
        if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")   
          do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
            if in ("$880.@script.id","$AGR.script.id")     
            copy_field("$880.a","$AGR.record.@title")
            copy_field("$880.n","$AGR.record.@titleOfSubSeries_n")
            unless exists("$AGR.record.@titleOfSubSeries_p")
              set_array("$AGR.record.@titleOfSubSeries_p")
            end
            copy_field("$880.p","$AGR.record.@titleOfSubSeries_p.$append")
            unless exists("$AGR.record.otherTitleInformation[]")
              set_array("$AGR.record.otherTitleInformation[]")
            end
            copy_field("$880.b","$AGR.record.otherTitleInformation[].$append")     
            unless exists("$AGR.record.responsibilityStatement[]")
              set_array("$AGR.record.responsibilityStatement[]")
            end
            copy_field("$880.c","$AGR.record.responsibilityStatement[].$append")  
            end
          end
        else    
        copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
        copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")        
        copy_field("$880.a","alternateGraphicRepresentation[].$last.record.@title")
        copy_field("$880.n","alternateGraphicRepresentation[].$last.record.@titleOfSubSeries_n")
        set_array("alternateGraphicRepresentation[].$last.record.@titleOfSubSeries_p")
        copy_field("$880.p","alternateGraphicRepresentation[].$last.record.@titleOfSubSeries_p.$append")            
        set_array("alternateGraphicRepresentation[].$last.record.otherTitleInformation[]")
        copy_field("$880.b","alternateGraphicRepresentation[].$last.record.otherTitleInformation[].$append")
        set_array("alternateGraphicRepresentation[].$last.record.responsibilityStatement[]")
        copy_field("$880.c","alternateGraphicRepresentation[].$last.record.responsibilityStatement[].$append")            
        end
      end
    end
  end
end

do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
  if exists("$AGR.record.@title")
    unless exists("$AGR.record.@titleOfSubSeries_n")
      copy_field("@titleOfSubSeries_n","$AGR.record.@titleOfSubSeries_n")
    end
    join_field("$AGR.record.@titleOfSubSeries_p", ". ")
    if is_empty("$AGR.record.@titleOfSubSeries_p")
      remove_field("$AGR.record.@titleOfSubSeries_p")
    end
    if exists("$AGR.record.@titleOfSubSeries_n") # separate subvolume numbering and title with :
      prepend("$AGR.record.@titleOfSubSeries_p", ": ")
    end
    if is_empty("$AGR.record.@titleOfSubSeries_n")
      remove_field("$AGR.record.@titleOfSubSeries_n")
    end
    paste("$AGR.record.@titleOfSubSeries", "$AGR.record.@titleOfSubSeries_n",  "$AGR.record.@titleOfSubSeries_p", join_char: "")

    if is_empty("$AGR.record.@titleOfSubSeries")
      remove_field("$AGR.record.@titleOfSubSeries")
    end

    prepend("$AGR.record.@titleOfSubSeries",", ")

    paste("$AGR.record.title","$AGR.record.@title", "$AGR.record.@titleOfSubSeries", join_char: "") # title consists of main title + if exists: subvolume numbering and subvolume title
    remove_field("$AGR.record.@title")    
    remove_field("$AGR.record.@titleOfSubSeries")
    remove_field("$AGR.record.@titleOfSubSeries_n")
    remove_field("$AGR.record.@titleOfSubSeries_p")
  elsif exists("$AGR.record.@titleOfSubSeries_p") # We have an appearance where there is no title $a is given as alternateGraphicRepresentation
    join_field("$AGR.record.@titleOfSubSeries_p", ". ")
    if is_empty("$AGR.record.@titleOfSubSeries_p")
      remove_field("$AGR.record.@titleOfSubSeries_p")
    end
    if exists("$AGR.record.@titleOfSubSeries_n") # separate subvolume numbering and title with :
      prepend("$AGR.record.@titleOfSubSeries_p", ": ")
    end
    unless exists("$AGR.record.@titleOfSubSeries_n")
      copy_field("@titleOfSubSeries_n","$AGR.record.@titleOfSubSeries_n")
    end
    if exists("$AGR.record.@titleOfSubSeries_n") # separate subvolume numbering and title with :
      prepend("$AGR.record.@titleOfSubSeries_p", ": ")
    end

    paste("$AGR.record.title", "$AGR.record.@titleOfSubSeries_n",  "$AGR.record.@titleOfSubSeries_p", join_char: "")
    remove_field("$AGR.record.@titleOfSubSeries_n")
    remove_field("$AGR.record.@titleOfSubSeries_p")
  end
end

# 246 - Varying Form of Title (R) - Subfields: $a (NR)

set_array("alternativeTitle[]")
copy_field("246?[ 345678].a","alternativeTitle[].$append")

do list(path:"246?[ 345678]","var":"$i")
  if exists("$i.6")
    copy_field("$i.6","$i.linkageTest")
    do list(path:"880??","var":"$880")
      if in ("$i.linkageTest","$880.linkageTest")
        if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")   
          do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
            if in ("$880.@script.id","$AGR.script.id")
              unless exists("$AGR.record.alternativeTitle[]")
                set_array("$AGR.record.alternativeTitle[]")
              end
              copy_field("$880.a","$AGR.record.alternativeTitle[].$append")
            end
          end
        else    
          copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
          copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")        
          set_array("alternateGraphicRepresentation[].$last.record.alternativeTitle[]")
          copy_field("$880.a","alternateGraphicRepresentation[].$last.record.alternativeTitle[].$append")
        end
      end
    end
  end
end  


# 247 - Former Title (R)
do list(path: "247??", "var":"$i")
  if exists("$i.f")
    paste("alternativeTitle[].$append","$i.a", "~(","$i.f","~)")
  else
    copy_field("$i.a","alternativeTitle[].$append")
  end
end

replace_all("alternativeTitle[].*","<<|>>","")

set_array("otherTitleInformation[]")
copy_field("245??.b","otherTitleInformation[].$append")
unless any_match("otherTitleInformation[].*",".*\\.\\.\\.")
  replace_all("otherTitleInformation[].*","\\s?[./]\\s?$","")
end

# 250 - Edition Statement (R) - Subfields: $a (NR)

set_array("edition[]")
copy_field("250  .a","edition[].$append")
replace_all("edition[].*","\\s?[./]\\s?$","")

do list(path:"250  ","var":"$i")
  if exists("$i.6")
    copy_field("$i.6","$i.linkageTest")
    do list(path:"880??","var":"$880")
      if in ("$i.linkageTest","$880.linkageTest")
        if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")   
          do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
            if in ("$880.@script.id","$AGR.script.id")
                unless exists("$AGR.record.edition[]")
                  set_array("$AGR.record.edition[]")
                end
              copy_field("$880.a","$AGR.record.edition[].$append")
            end
          end
        else    
          copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
          copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")        
          set_array("alternateGraphicRepresentation[].$last.record.edition[]")
          copy_field("$880.a","alternateGraphicRepresentation[].$last.record.edition[].$append")
        end
      end
    end
  end
end

# 260 - Publication, Distribution, etc. (Imprint) (R) - Subfield: $a (R), $b (R), $c (R)
# 264 - Production, Publication, Distribution, Manufacture, and Copyright Notice (R) -  Subfield: $a (R), $b (R), $c  (R)
# 008,18 for frequency
# 515 - Numbering Peculiarities Note (R)
# Prefer 264 over 260 since it can create duplicate info and 260 is discontinued in RDA.

set_array("publication[]")
if exists("264[ 23][ 1]")
  call_macro("publication",field:"2643[ 1]") # 3 - Current/Latest
  call_macro("publication",field:"2642[ 1]") # 2 - Intervening
  call_macro("publication",field:"264 [ 1]") # # - Not applicable/No information provided/Earliest
else
  call_macro("publication",field:"2603[ 1]") # 3 - Current/Latest
  call_macro("publication",field:"2602[ 1]") # 2 - Intervening
  call_macro("publication",field:"260 [ 1]") # # - Not applicable/No information provided/Earliest
end

# Only add additional publication info to the first publication-object since it is the latest.

if exists("publication[].$first")
  copy_field("362??.a","publication[].$first.publicationHistory")
    set_array("publication[].$first.frequency[]")
    if any_match("leader","^.{6}(a[bis]|m[bis]).*$") # checks if continous ressource
      unless any_match("008","^.{18}[#\\| u].*$") # filters out not matching values and also the value unknown
        copy_field("008","publication[].$first.frequency[].$append.id")
        replace_all("publication[].$first.frequency[].$last.id", "^.{18}(.).*$", "http://marc21rdf.info/terms/continuingfre#$1")
      end
    elsif any_match("006","^s.*$")
      do list(path: "006", "var":"$z")
        if any_match("$z","^s.*$")
          unless any_match("$z","^.[#\\| u].*$")
            copy_field("$z","publication[].$first.frequency[].$append.id")
            replace_all("publication[].$first.frequency[].$last.id", "^.(.).*$", "http://marc21rdf.info/terms/continuingfre#$1")
          end
        end
      end
    end
    set_array("publication[].$first.note[]")
    copy_field("515??.a","publication[].$first.note[].$append")
  do list(path:"500  ", "var":"$i")
    if any_match("$i.a", "^.*saá¹. \\d{4}=(\\d{4}).*Chr.*")
      remove_field("publication[].$first.startDate")
      copy_field("$i.a","publication[].$first.startDate")
      replace_all("publication[].$first.startDate","^.*saá¹. \\d{4}=(\\d{4}).*Chr.*","$1")
    end
  end
end




# Mapping for SecondaryPublication
# 533 - Reproduction Note (R)

do list(path:"533  ", "var": "$i")
  add_field("publication[].$append.test","")
  set_array("publication[].$last.type[]","SecondaryPublicationEvent")
  set_array("publication[].$last.location[]")
  do list(path:"$i.b","var":"$j")
    copy_field("$j", "publication[].$last.location[].$append")
  end
  set_array("publication[].$last.description[]")
  copy_field("$i.a", "publication[].$last.description[].$append")
  copy_field("$i.c", "publication[].$last.publishedBy")
  do list(path: "$i.d", "var":"$j")
    replace_all("$j", "\\[|\\]|ca. |c ", "")
    unless exists("publication[].$last.startDate")
      if any_match("$j",".*?([01]\\d{3}|20\\d{2}).*")
        paste("publication[].$last.startDate", "$j")
      end
    end
    unless exists("publication[].$last.endDate")
      if any_match("$j",".*-[ ]?([01]\\d{3}|20\\d{2})$")
        paste("publication[].$last.endDate", "$j")
      end
    end
  end
end

# Cleaning up dates of publicaton []
do list(path: "publication[]", "var": "$i")
  replace_all("$i.startDate", ".*?([01]\\d{3}|20\\d{2}).*", "$1")
  replace_all("$i.endDate", ".*-[ ]?([01]\\d{3}|20\\d{2})$", "$1")
  replace_all("$i.location[].*", "^\\[(.*)\\]$", "$1")
  replace_all("$i.publishedBy[].*", "^[Â©]|\\s?[,:;/=]?$", "")
  uniq("$i.location[]")
end


# 246 - Varying Form of Title (R) - $a - Title proper/short title (NR)

set_array("titleKeyword[]")
do list(path: "24610", "var": "$i")
  copy_field("$i.a","titleKeyword[].$append")
end


# 210 - Abbreviated Title (R) - $a - Abbreviated title (NR)
set_array("shortTitle[]")
do list(path: "210??", "var": "$i")
  copy_field("$i.a","shortTitle[].$append")
end
