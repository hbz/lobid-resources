# alternateGraphicRepresation
do put_macro("alternateGraphicRepresationArrayOfObjects")
  if exists("$[variable].6")
    copy_field("$[variable].6","$[variable].linkageTest")
    do list(path:"880??","var":"$880")
      if in ("$[variable].linkageTest","$880.linkageTest")
        if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")
          do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
            if in ("$880.@script.id","$AGR.script.id")
              unless exists("$AGR.record.$[targetArray]")
                set_array("$AGR.record.$[targetArray]")
              end
              copy_field("$880.a","$AGR.record.$[targetArray].$append$[targetField].label")
            end
          end
        else
          copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
          copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")
          set_array("alternateGraphicRepresentation[].$last.record.$[targetArray]")
          copy_field("$880.a","alternateGraphicRepresentation[].$last.record.$[targetArray].$append$[targetField].label")
        end
      end
    end
  end
end

do put_macro("alternateGraphicRepresationIsPartOf")
  if exists("$[variable].6")
    copy_field("$[variable].6","$[variable].linkageTest")
    do list(path:"880??","var":"$880")
      if in ("$[variable].linkageTest","$880.linkageTest")
        if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")
          do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
            if in ("$880.@script.id","$AGR.script.id")
              unless exists("$AGR.record.isPartOf[]")
                set_array("$AGR.record.isPartOf[]")
              end
              set_array("$AGR.record.isPartOf[].$append.hasSuperordinate[]")
              copy_field("$880.a","$AGR.record.isPartOf[].$last.hasSuperordinate[].$append.label")
              copy_field("$880.v", "$AGR.record.isPartOf[].$last.numbering")
            end
          end
        else
          copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
          copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")
          set_array("alternateGraphicRepresentation[].$last.record.isPartOf[]")
          set_array("alternateGraphicRepresentation[].$last.record.isPartOf[].$append.hasSuperordinate[]")
          copy_field("$880.a","alternateGraphicRepresentation[].$last.record.isPartOf[].$last.hasSuperordinate[].$append.label")
          copy_field("$880.v", "alternateGraphicRepresentation[].$last.record.isPartOf[].$last.numbering")
        end
      end
    end
  end
end

# Additional contributor roles from subfield $e
do put_macro("rolesFromSubfieldE")
  if exists("$i.e")
    unless is_array("$i.4")
      move_field("$i.4","$i.@4")
      set_array("$i.4")
      move_field("$i.@4","$i.4.$append")
    end
    do list(path:"$i.e","var":"$e")
      if any_match("$e","(?i).*dars.*")
        add_field("$i.4.$append","act")
      elsif any_match("$e","(?i).*nach.*")
        add_field("$i.4.$append","aft")
      elsif any_match("$e","(?i).*vorl.*")
        add_field("$i.4.$append","ant")
      elsif any_match("$e","(?i).*(Artist|Künstler).*")
        add_field("$i.4.$append","art")
      elsif any_match("$e","(?i).*Vorw.*")
        add_field("$i.4.$append","aui")
      elsif any_match("$e","(?i).*Drehb.*")
        add_field("$i.4.$append","aus")
      elsif any_match("$e","(?i).*(author|Verfasser).*")
        add_field("$i.4.$append","aut")
      elsif any_match("$e","(?i).*B[ü|ue]hnenbild.*") # was http://purl.org/lobid/lv#StageDesign in old morph
        add_field("$i.4.$append","std")
      elsif any_match("$e","(?i).*choreogr.*")
        add_field("$i.4.$append","chr")
      elsif any_match("$e","(?i).*(mitarb|Beitr|Beitr|Komm\\.).*")
        add_field("$i.4.$append","ctb")
      elsif any_match("$e","(?i).*(Komp).*")
        add_field("$i.4.$append","cmp")
      elsif any_match("$e","(?i).*(Dir|Chorleit).*")
        add_field("$i.4.$append","cnd")
      elsif any_match("$e","(?i).*(Sammler).*")
        add_field("$i.4.$append","col")
      elsif any_match("$e","(?i).*(Kartogra).*")
        add_field("$i.4.$append","col")
      elsif any_match("$e","(?i).*(Tänzer).*")
        add_field("$i.4.$append","dnc")
      elsif any_match("$e","(?i).*Herausgebendes Organ.*")
        add_field("$i.4.$append","isb")
      elsif any_match("$e","(?i).*(hrsg|editor|Herausg).*|^Ed\\.$")
        add_field("$i.4.$append","edt")
      elsif any_match("$e","(?i).*(Stecher).*")
        add_field("$i.4.$append","egr")
      elsif any_match("$e","(?i).*(Widmungsempfänger).*")
        add_field("$i.4.$append","hnr")
      elsif any_match("$e","(?i).*(Ill|Zeichn).*")
        add_field("$i.4.$append","ill")
      elsif any_match("$e","(?i).*(Interviewter).*")
        add_field("$i.4.$append","ive")
      elsif any_match("$e","(?i).*(Interviewer).*")
        add_field("$i.4.$append","ivr")
      elsif any_match("$e","(?i).*(Instr|Cembalo|Fagott|Flöte|Gitarre|guitar|Harfe|harp|Horn|Klarinette|clarinet|Klavier|Piano|Kontrabass|Laute|Oboe|Org|Posaune|Saxophon|Schlagzeug|drums|Tromp|Violoncello|Violine).*")
        add_field("$i.4.$append","itr")
      elsif any_match("$e","(?i).*(Libr).*")
        add_field("$i.4.$append","lbt")
      elsif any_match("$e","(?i).*(Ltg).*")
        add_field("$i.4.$append","ltg")
      elsif any_match("$e","(?i).*(Moderation|moderat).*")
        add_field("$i.4.$append","mod")
      elsif any_match("$e","(?i).*(Musi).*")
        add_field("$i.4.$append","mus")
      elsif any_match("$e","(?i).*(Begr).*")
        add_field("$i.4.$append","org")
      elsif any_match("$e","(?i).*(Otogr).*")
        add_field("$i.4.$append","pht")
      elsif any_match("$e","(?i).*(Interpr).*")
        add_field("$i.4.$append","prf")
      elsif any_match("$e","(?i).*(Prod).*")
        add_field("$i.4.$append","pro")
      elsif any_match("$e","(?i).*(Adressat).*")
        add_field("$i.4.$append","rcp")
      elsif any_match("$e","(?i).*(Adressat).*")
        add_field("$i.4.$append","red")
      elsif any_match("$e","(?i).*(Gesang|Alt|Bariton|Bass|Baß|Counterten|Mezzosopr|Sopr|Ten|Singer).*")
        add_field("$i.4.$append","sng")
      elsif any_match("$e","(?i).*(sprecher).*")
        add_field("$i.4.$append","spk")
      elsif any_match("$e","(?i).*(bers|transla).*")
        add_field("$i.4.$append","trl")
      end
    end
    if is_empty("$i.4")
      remove_field("$i.4")
    end
    uniq("$i.4")
  end
end

# Macro for combinedLabel Event / Meeting

do put_macro("gndEventCombinedLabel")
  set_array("$[field].@combinedLabel")  # check if GND concept has combined variant
  copy_field("$[field].a","$[field].@combinedLabel.$append")
  copy_field("$[field].b","$[field].@combinedLabel.$append")
  join_field("$[field].@combinedLabel", ". ") # This is the difference to gnd person
  set_array("$[field].@combinedDetailsForEvents")
  copy_field("$[field].n","$[field].@combinedDetailsForEvents.$append")
  copy_field("$[field].g","$[field].@combinedDetailsForEvents.$append")
  copy_field("$[field].d","$[field].@combinedDetailsForEvents.$append")
  copy_field("$[field].c","$[field].@combinedDetailsForEvents.$append")
  join_field("$[field].@combinedDetailsForEvents"," : ")
  unless is_empty("$[field].@combinedDetailsForEvents.")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~ (", "$[field].@combinedDetailsForEvents", "~)", join_char:"")
  end
  if exists("$[field].t")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~: ","$[field].t", join_char:"")
  end
end

# Macro for combinedLabel Person

do put_macro("gndPersonCombinedLabel")
    set_array("$[field].@combinedLabel")  # check if GND concept has combined variant
    copy_field("$[field].a","$[field].@combinedLabel.$append")
    copy_field("$[field].b","$[field].@combinedLabel.$append")
    join_field("$[field].@combinedLabel", " ") # This is the difference to gnd non person
    if exists("$[field].c")
      paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~, ", "$[field].c", join_char:"")
    end
    if exists("$[field].g")
      paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~ (", "$[field].g", "~)", join_char:"")
    end
    if exists("$[field].x")
      paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~/","$[field].x")
    end
    if exists("$[field].t")
      paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~: ","$[field].t", join_char:"")
    end
end


# Macro for combinedLabel Non-Person and Non-Event

do put_macro("gndOtherCombinedLabel")
  set_array("$[field].@combinedLabel")  # check if GND concept has combined variant
  copy_field("$[field].a","$[field].@combinedLabel.$append")
  copy_field("$[field].p","$[field].@combinedLabel.$append")
  copy_field("$[field].b","$[field].@combinedLabel.$append")
  join_field("$[field].@combinedLabel", ". ") # This is the difference to gnd person
  if exists("$[field].c")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~, ", "$[field].c", join_char:"")
  end
  if exists("$[field].g")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~ (", "$[field].g", "~)", join_char:"")
  end
  if exists("$[field].n")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~, ","$[field].n", join_char:"")
  end
  if exists("$[field].x")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~/","$[field].x")
  end
  if exists("$[field].t")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~: ","$[field].t", join_char:"")
  end
  if exists("$[field].z")
    paste("$[field].@combinedLabel", "$[field].@combinedLabel", "~ (", "$[field].z", "~)", join_char:"")
  end
end

# for describedBy provenance info

do put_macro("provenanceLinks")
  lookup("$[field]","sigel2isilMap")
  replace_all("$[field]", " ", "")
  replace_all("$[field]", "\\/Inst","")
  if any_match("$[field]",".*(hbz|HBZ).*")
    replace_all("$[field]", "^.*$", "DE-605")
  elsif any_match("$[field]","^NRW$|^NRW\\/Hist.Buch$")
    replace_all("$[field]", "^.*$", "DE-605")
  elsif  any_equal("$[field]", "Springer")
    replace_all("$[field]", "^.*$", "DE-He213")
  elsif  any_equal("$[field]", "BSZ")
    replace_all("$[field]", "^.*$", "DE-576")
  elsif  any_equal("$[field]", "GBV")
    replace_all("$[field]", "^.*$", "DE-601")
  elsif  any_equal("$[field]", "KOBV")
    replace_all("$[field]", "^.*$", "DE-602")
  elsif  any_equal("$[field]", "HeBIS")
    replace_all("$[field]", "^.*$", "DE-603")
  elsif  any_equal("$[field]", "BVB")
    replace_all("$[field]", "^.*$", "DE-604")
  elsif any_match("$[field]","^292$")
    replace_all("$[field]", "^292$", "DE-101b")
  elsif any_match("$[field]","(.*)\\/NWBib$")
    replace_all("describedBy.resultOf.object.sourceOrganization.id", "(.*)\\/NWBib$", "DE-$1")
  elsif any_match("$[field]",".*(dnb|DNB|GWDNB|GWDEB|GWDDB|DEDNM|DEDND).*")
    replace_all("$[field]", "^.*$", "DE-101")
  elsif any_match("$[field]", "^\\d{4}$")
    lookup("$[field]", "picaCreatorId2Isil")
  end


  unless any_match("$[field]","[A-Za-z]{2}-.*")
    prepend("$[field]","DE-")
  end
  prepend("$[field]", "http://lobid.org/organisations/")
  append("$[field]", "#!")
end

# holding institution differentiating between library and sublibrary (libraryCode) and adding opacLink

do put_macro("holdingLibrary+opacLink")
  copy_field("$[mmsIdField]", "$i.@iz")
  replace_all("$i.@iz",".*(\\d{4})$","$1")
  lookup("$i.@iz", "alma-institution-code-to-isil")
  copy_field("$[libraryCodeField]","$i.@sublibraryIsil")
  lookup("$i.@sublibraryIsil", "hbzowner2sigel",delete:"true")
  lookup("$i.@sublibraryIsil", "sigel2isilMap",delete:"true")
  # following fix checks for sublibrary codes and if they map to provided sublocation Isil
  unless exists("$i.@sublibraryIsil")
    paste("$i.@sublibraryIsil","$i.M","~+","$[libraryCodeField]",join_char:"")
    lookup("$i.@sublibraryIsil", "sublibraryIsil",delete:"true")
  end
  if exists("$i.@sublibraryIsil")
    copy_field("$i.@sublibraryIsil", "hasItem[].$last.heldBy.isil")
  # if no mapping for a sublocation code is provided or no sublocation code exists ($i.w) the main library ISIL is used.
  else
    copy_field("$i.@iz", "hasItem[].$last.heldBy.isil")
  end
  call_macro("opacLink", field:"@sublibraryIsil")
  unless exists("hasItem[].$last.seeAlso[].1")
    call_macro("opacLink", field:"@iz")
  end
  paste("hasItem[].$last.heldBy.id", "~http://lobid.org/organisations/", "hasItem[].$last.heldBy.isil", "~#!", join_char:"")
  copy_field("hasItem[].$last.heldBy.id", "hasItem[].$last.heldBy.label")
  set_array("hasItem[].$last.inCollection[]")
  paste("hasItem[].$last.inCollection[].$append.id", "~http://lobid.org/organisations/", "$i.@iz", "~#!", join_char:"")
  copy_field("hasItem[].$last.inCollection[].$last.id", "hasItem[].$last.inCollection[].$last.label")
  # item id is constructed "http://lobid.org/items/[almaMmsId of the record]:[isil of the Owner]:[almaMmsId of the holding]#!"
  paste("hasItem[].$last.id", "~http://lobid.org/items/","almaMmsId", "~:", "hasItem[].$last.heldBy.isil","~:", "$[mmsIdField]","~#!", join_char: "")
end

# opacLink

do put_macro("opacLink")
  if exists("zdbId")
    copy_field("$i.$[field]", "$i.@opacLinkZdbId")
    lookup("$i.@opacLinkZdbId","isil2opac_zdbId", delete:"true")
    split_field("$i.@opacLinkZdbId","\\{zdbid\\}")
  elsif exists("hbzId")
    copy_field("$i.$[field]", "$i.@opacLinkHbzId")
    lookup("$i.@opacLinkHbzId","isil2opac_hbzId", delete:"true")
    split_field("$i.@opacLinkHbzId","\\{hbzid\\}")
  end
  copy_field("$i.$[field]", "$i.@opacAlmaMmsId")
  lookup("$i.@opacAlmaMmsId","isil2opac_almaMmsId", delete:"true")
  split_field("$i.@opacAlmaMmsId","\\{almaMmsId\\}")
  if exists("issn[].1")
    copy_field("$i.$[field]", "$i.@opacLinkIssn")
    lookup("$i.@opacLinkIssn","isil2opac_issn", delete:"true")
    split_field("$i.@opacLinkIssn","\\{issn\\}")
  end
#  if exists("isbn[].1")
#    copy_field("$i.$[field]", "$i.@opacLinkIsbn")
#    lookup("$i.@opacLinkIsbn","isil2opac_isbn", delete:"true")
#    split_field("$i.@opacLinkZdbId","\\{isbn\\}")
#  end
  set_array("hasItem[].$last.seeAlso[]")
  if exists("$i.@opacAlmaMmsId.1")
    paste("hasItem[].$last.seeAlso[].$append","$i.@opacAlmaMmsId.1","almaMmsId","$i.@opacAlmaMmsId.2",join_char:"")
  elsif exists("$i.@opacLinkZdbId.1")
    paste("hasItem[].$last.seeAlso[].$append","$i.@opacLinkZdbId.1","zdbId","$i.@opacLinkZdbId.2",join_char:"")
  elsif exists("$i.@opacLinkHbzId.1")
    paste("hasItem[].$last.seeAlso[].$append","$i.@opacLinkHbzId.1","hbzId","$i.@opacLinkHbzId.2",join_char:"")
#  elsif exists("$i.@opacLinkIsbn.1")
#    paste("hasItem[].$last.seeAlso[].$append","$i.@opacLinkIsbn.1","isbn[].1","$i.@opacLinkIsbn.2",join_char:"")
  elsif exists("$i.@opacLinkIssn.1")
    paste("hasItem[].$last.seeAlso[].$append","$i.@opacLinkIssn.1","issn[].1","$i.@opacLinkIssn.2",join_char:"")
  end
end

# for Schlagwortfolgen

do put_macro("schlagwortfolge")
  if exists("$[field]")
    set_array("subject[].$append.type[]","ComplexSubject")
    set_array("subject[].$last.label")
    set_array("subject[].$last.componentList[]")
    do list(path:"$[field]", "var":"$i")
      set_array("subject[].$last.componentList[].$append.type[]")
      if exists("$i.t") # Marker for Werktitel/Work even when the GND-enrichment is falsly labeld as Peron or differently
        add_field("subject[].$last.componentList[].$last.type[].$append","Work")
      else
        do list(path: "$i.D", "var": "$k")
          copy_field("$k","subject[].$last.componentList[].$last.type[].$append")
        end
      end
      if any_equal("subject[].$last.componentList[].$last.type[]","p")
        call_macro("gndPersonCombinedLabel",field:"$i")
      elsif any_equal("subject[].$last.componentList[].$last.type[]","f")
        call_macro("gndEventCombinedLabel",field:"$i")
      else
        call_macro("gndOtherCombinedLabel",field:"$i")
      end
      copy_field("$i.@combinedLabel", "subject[].$last.componentList[].$last.label")
      unless any_equal("subject[].$last.componentList[].$last.label","")
        copy_field("subject[].$last.componentList[].$last.label","subject[].$last.label.$append")
      end
      do list(path:"$i.0", "var": "$j")
        if any_match("$j","^\\(DE-588\\)(.*)$")
          add_field("subject[].$last.componentList[].$last.source.label","Gemeinsame Normdatei (GND)")
          add_field("subject[].$last.componentList[].$last.source.id","https://d-nb.info/gnd/7749153-1")
          copy_field("$j", "subject[].$last.componentList[].$last.id")
          replace_all("subject[].$last.componentList[].$last.id","^\\(DE-588\\)(.*)$","https://d-nb.info/gnd/$1")
          copy_field("$j", "subject[].$last.componentList[].$last.gndIdentifier")
          replace_all("subject[].$last.componentList[].$last.gndIdentifier","^\\(DE-588\\)(.*)$","$1")
        end
        # GND idn as variable
        if exists("$i.B")
          do list(path: "$i.B","var":"$gnd")
            unless exists("subject[].$last.componentList[].$last.@gndIdn")
              copy_field("$gnd","subject[].$last.componentList[].$last.@gndIdn")
            end
          end
        elsif any_match("$j","^.*DNB\\|(.*)$")
          copy_field("$j", "subject[].$last.componentList[].$last.@gndIdn")
          replace_all("subject[].$last.componentList[].$last.@gndIdn", "^.*DNB\\|(.*)$","GND-$1")
        elsif any_match("$j","^\\(DE-101\\)(.*)$")
            copy_field("$j", "subject[].$last.componentList[].$last.@gndIdn")
            replace_all("subject[].$last.componentList[].$last.@gndIdn", "^\\(DE-101\\)(.*)$","GND-$1")
        end
      end
      copy_field("$i.d","subject[].$last.componentList[].$last.dateOfBirthAndDeath") # dates will be differentiated later in the process
    end
    join_field("subject[].$last.label"," | ")
  end
end


do put_macro("subjectLabel")
  set_array("subject[].$last.label")
  set_array("$i.@name")
  copy_field("$i.a","$i.@name.$append")
  copy_field("$i.b","$i.@name.$append")
  copy_field("$i.c","$i.@name.$append")
  copy_field("$i.d","$i.@name.$append")
  join_field("$i.@name")
  copy_field("$i.@name","subject[].$last.label.$append")
  copy_field("$i.x","subject[].$last.label.$append")
  copy_field("$i.y","subject[].$last.label.$append")
  copy_field("$i.z","subject[].$last.label.$append")
  copy_field("$i.v","subject[].$last.label.$append")
  join_field("subject[].$last.label"," / ")
end

do put_macro("publication")
  do list(path:"$[field]", "var":"$i")
    set_hash( "publication[].$append")
    do list(path: "$i.c", "var":"$j")
      replace_all("$j", "\\[|\\]|ca. |c ", "")
      unless exists("publication[].$last.startDate")
        if any_match("$j",".*?([01]\\d{3}|20\\d{2}).*")
          paste("publication[].$last.startDate", "$j")
        end
      end
      unless exists("publication[].$last.endDate")
        if any_match("$j",".*-[ ]?([01]\\d{3}|20\\d{2})$")
          paste("publication[].$last.endDate", "$j")
        end
      end
    end
    set_array("publication[].$last.type[]","PublicationEvent")
    set_array("publication[].$last.location[]")
    copy_field("$i.a", "publication[].$last.location[].$append")
    set_array("publication[].$last.publishedBy[]")
    copy_field("$i.b", "publication[].$last.publishedBy[].$append")
    if exists("$i.6")
      copy_field("$i.6","$i.linkageTest")
      do list(path:"880??","var":"$880")
        if in ("$i.linkageTest","$880.linkageTest")
          if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")
            do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
              if in ("$880.@script.id","$AGR.script.id")
                unless exists("$AGR.record.publication[]")
                  set_array("$AGR.record.publication[]")
                end
                set_hash( "$AGR.record.publication[].$append")
                set_array("$AGR.record.publication[].$last.location[]")
                copy_field("$880.a", "$AGR.record.publication[].$last.location[].$append")
                set_array("$AGR.record.publication[].$last.publishedBy[]")
                copy_field("$880.b", "$AGR.record.publication[].$last.publishedBy[].$append")
              end
            end
          else
            copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
            copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")
            set_array("alternateGraphicRepresentation[].$last.publication[]")
            set_hash( "alternateGraphicRepresentation[].$last.publication[].$append")
            set_array("alternateGraphicRepresentation[].$last.publication[].$last.location[]")
            copy_field("$880.a", "alternateGraphicRepresentation[].$last.publication[].$last.location[].$append")
            set_array("alternateGraphicRepresentation[].$last.publication[].$last.publishedBy[]")
            copy_field("$880.b", "alternateGraphicRepresentation[].$last.publication[].$last.publishedBy[].$append")
          end
        end
      end
    end
  end
end

do put_macro("manufacture")
  do list(path:"$[field]", "var":"$i")
    set_hash( "manufacture[].$append")
    do list(path: "$i.c", "var":"$j")
      replace_all("$j", "\\[|\\]|ca. |c ", "")
      unless exists("manufacture[].$last.startDate")
        if any_match("$j",".*?([01]\\d{3}|20\\d{2}).*")
          paste("manufacture[].$last.startDate", "$j")
        end
      end
      unless exists("manufacture[].$last.endDate")
        if any_match("$j",".*-[ ]?([01]\\d{3}|20\\d{2})$")
          paste("manufacture[].$last.endDate", "$j")
        end
      end
    end
    set_array("manufacture[].$last.type[]","Event")
    set_array("manufacture[].$last.location[]")
    copy_field("$i.a", "manufacture[].$last.location[].$append")
    set_array("manufacture[].$last.manufacturedBy[]")
    copy_field("$i.b", "manufacture[].$last.manufacturedBy[].$append")
    if exists("$i.6")
      copy_field("$i.6","$i.linkageTest")
      do list(path:"880??","var":"$880")
        if in ("$i.linkageTest","$880.linkageTest")
          if in ("$880.@script.id","alternateGraphicRepresentation[].*.script.id")
            do list(path:"alternateGraphicRepresentation[]","var":"$AGR")
              if in ("$880.@script.id","$AGR.script.id")
                unless exists("$AGR.record.manufacture[]")
                  set_array("$AGR.record.manufacture[]")
                end
                set_hash( "$AGR.record.manufacture[].$append")
                set_array("$AGR.record.manufacture[].$last.location[]")
                copy_field("$880.a", "$AGR.record.manufacture[].$last.location[].$append")
                set_array("$AGR.record.manufacture[].$last.manufacturedBy[]")
                copy_field("$880.b", "$AGR.record.manufacture[].$last.manufacturedBy[].$append")
              end
            end
          else
            copy_field("$880.@script.id","alternateGraphicRepresentation[].$append.script.id")
            copy_field("$880.@script.label","alternateGraphicRepresentation[].$last.script.label")
            set_array("alternateGraphicRepresentation[].$last.manufacture[]")
            set_hash( "alternateGraphicRepresentation[].$last.manufacture[].$append")
            set_array("alternateGraphicRepresentation[].$last.manufacture[].$last.location[]")
            copy_field("$880.a", "alternateGraphicRepresentation[].$last.manufacture[].$last.location[].$append")
            set_array("alternateGraphicRepresentation[].$last.manufacture[].$last.publishedBy[]")
            copy_field("$880.b", "alternateGraphicRepresentation[].$last.manufacture[].$last.publishedBy[].$append")
          end
        end
      end
    end
  end
end
